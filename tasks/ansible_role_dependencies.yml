---

- name: Find all installed roles
  ansible.builtin.find:
    paths: "{{ foreman_ansible_roles_dir }}"
    file_type: directory
    recurse: false
  register: found_roles

- name: Check for requirements files in each role
  ansible.builtin.set_fact:
    roles_with_requirements: >-
      {{
        found_roles.files | map(attribute='path') | map('basename') | map('extract_requirements', foreman_ansible_roles_dir)
      }}
  vars:
    # Filter to extract requirements paths
    extract_requirements: |
      {% filter from_yaml %}
      {% for role in value %}
      - role: {{ role }}
        requirements_txt: {{ foreman_ansible_roles_dir }}/{{ role }}/requirements.txt
        requirements_yml: {{ foreman_ansible_roles_dir }}/{{ role }}/requirements.yml
      {% endfor %}
      {% endfilter %}
    value: "{{ found_roles.files | map(attribute='path') | map('basename') | list }}"

- name: Ensure requirements.txt is present for each role
  ansible.builtin.stat:
    path: "{{ item.requirements_txt }}"
  loop: "{{ roles_with_requirements }}"
  register: requirements_txt_files

- name: Ensure requirements.yml is present for each role
  ansible.builtin.stat:
    path: "{{ item.requirements_yml }}"
  loop: "{{ roles_with_requirements }}"
  register: requirements_yml_files

- name: Install Python dependencies for each role
  ansible.builtin.pip:
    requirements: "{{ item.item.requirements_txt }}"
  loop: "{{ requirements_txt_files.results }}"
  when: item.stat.exists

- name: Install Ansible Galaxy dependencies for each role
  community.general.ansible_galaxy_install:
    type: both
    requirements_file: "{{ item.item.requirements_yml }}"
    state: present
  loop: "{{ requirements_yml_files.results }}"
  when: item.stat.exists
  environment:
    ANSIBLE_COLLECTIONS_PATH: "{{ foreman_ansible_collections_dir }}"
    ANSIBLE_ROLES_PATH: "{{ foreman_ansible_roles_dir }}"

...
